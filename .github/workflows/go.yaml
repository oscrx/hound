# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
on:
  # Run CI when pushing to main
  push:
    branches: [ main ]
  # Run CI for PRs to main and staging
  pull_request:
    branches: [ main ]
jobs:
  go-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.18", "1.17", "1.14"]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - run: go build -x -work ./cmds/...
  node-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - run: npm install
  docker-build:
    name: Create docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          if: github.event_name != 'pull_request'
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  golangci:
    name: lint
    strategy:
      matrix:
        go: ["1.18"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.46.2

  go-test:
    strategy:
      matrix:
        go: ["1.18", "1.17", "1.14"]
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - run: go test -race ./...
  # There are no npm tests, yet.
